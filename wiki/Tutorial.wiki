#summary User guide for `ClonalFrameML`

=Notice=
Please note that this user guide is still under development. 

=Input =

There are two input files needed to run `ClonalFrameML`. The first one is an alignment of the sequences which can be either in [http://en.wikipedia.org/wiki/FASTA_format fasta format] or [http://asap.ahabs.wisc.edu/mauve-aligner/mauve-user-guide/mauve-output-file-formats.html extended multi fasta (XMFA) format]. The second one is a starting tree, which must be in [http://en.wikipedia.org/wiki/Newick_format Newick format]. There must be as many leaves in this tree as there are sequences in the alignment file, and the names of the leaves must match the names in the headers of the alignment file.

This starting tree can be generated for example using [http://sco.h-its.org/exelixis/web/software/raxml/index.html RAxML] or [http://www.atgc-montpellier.fr/phyml/ PhyML]. 

=Running=

The basic command for running `ClonalFrameML` is as follows:

{{{
ClonalFrameML newick_file seq_file kappa output_prefix [OPTIONS]
}}}

The `newick_file` and `seq_file` are the two input files described above. The parameter `kappa` specifies the transition/transversion bias, and is an output of the phylogenetic reconstruction software. The `output_prefix` is the prefix used for all output files generated by `ClonalFrameML`. 

The options of `ClonalFrameML` are listed below:

{{{
-fasta_file_list               true or false (default)   Take fasta_file to be a white-space separated file list.
-correct_branch_lengths        true (default) or false   Correct branch lengths using ClonalFrame model.
-excess_divergence_model       true or false (default)   Use the 'excess divergence' model. Mandatory for two sequences.
-ignore_incomplete_sites       true or false (default)   Ignore sites with any ambiguous bases.
-ignore_user_sites             sites_file                Ignore sites listed in whitespace-separated sites_file.
-reconstruct_invariant_sites   true or false (default)   Reconstruct the ancestral states at invariant sites.
-use_incompatible_sites        true or false (default)   Use homoplasious and multiallelic sites to correct branch lengths.
-brent_tolerance               tolerance (default .001)  Set the tolerance of the Brent routine.
-powell_tolerance              tolerance (default .001)  Set the tolerance of the Powell routine.
-joint_branch_param            true or false (default)   Jointly optimize branch lengths and recombination parameters.
-rho_per_branch                true or false (default)   Estimate recombination parameters separately for each branch.
-rho_per_branch_no_lrt         true or false (default)   As above but suppress likelihood ratio test for recombination.
-single_rho_viterbi            true or false (default)   Jointly optimize recombination parameters using Viterbi algorithm.
-single_rho_forward            true or false (default)   Jointly optimize recombination parameters using forward algorithm.
-rescale_no_recombination      true or false (default)   Rescale branch lengths for given sites with no recombination model.
-multithread                   true or false (default)   Enable OpenMP parallel code. Overhead may cancel out gains.
-show_progress                 true or false (default)   Output the progress of the maximum likelihood routines.
-compress_reconstructed_sites  true (default) or false   Reduce the number of columns in the output FASTA file.
-initial_rho_over_theta        value > 0 (default 0.1)   Initial value of rho/theta used in the search.
-initial_import_divergence     value > 0 (default 0.1)   Initial value of import divergence used in the search.
-initial_mean_import_length    value > 1 (default 500)   Initial value of mean import length used in the search.
-min_branch_length             value > 0 (default 1e-7)  Minimum branch length.
-mcmc_per_branch               true or false (default)   Estimate by MCMC recombination parameters for each branch.
-laplace_approx                true or false (default)   rho_per_branch model with approximation of the joint posterior.
-use_nelder_mead               true or false (default)   Use Nelder-Mead and not Powell method in Laplace approximation.
-viterbi_training              true or false (default)   Estimate parameters by a Viterbi-based hill climbing algorithm.
-driving_prior_mean            4 values (df "0 0 0 0")   Mean of the prior used by Laplace/Viterbi algorithms.
-driving_prior_precision       4 values (df "1 1 1 1")   Precision of the prior used by Laplace/Viterbi algorithms.
-initial_values                3 values/empty (def "")   Initial values used by the Laplace/Viterbi algorithms.
-guess_initial_m               true or false (default)   Initialize M and nu jointly in the Laplace/Viterbi algorithms.
-grid_approx                   value 0/2+  (default 0)   Number of points for a grid approximation (0 = off).
-mcmc                          true or false (default)   Estimate by MCMC recombination parameters for all branches.
-mcmc_infer_branch_lengths     true or false (default)   Estimate by MCMC branch lengths for all branches.
-partial_viterbi               true or false (default)   Estimate parameters by Powell/Nelder-Mead and Viterbi algorithms.
-em                            true or false (default)   Estimate parameters by a Baum-Welch expectation maximization algorithm.
-emsim                         value >= 0  (default 0)   Number of simulations to estimate uncertainty in the EM algorithm.
-embranch                      true or false (default)   Estimate parameters for each branch using the EM algorithm.
-embranch_dispersion           value > 0 (default .01)   Dispersion in parameters among branches in the -embranch model.

}}}

=Output=

Running `ClonalFrameML` produces several output files, each of which starts with the `output_prefix` specified in the command line and ending with the following extensions:

==ML_sequence.fasta==

This file contains the sequence reconstructed by maximum likelihood for all internal nodes of the phylogeny, as well as for all missing data in the input sequences.

==position_cross_reference.txt==
A vector of comma-separated values indicating the location in the input sequence file of the sites reconstructed in the output `ML_sequence.fasta` file.

==em.txt==

This file contains the point estimates for R/theta, nu, delta and the branch lengths.

==emsim.txt==

This file contains the bootstrapped values for the three parameters R/theta, nu and delta.

==importation_status.txt==

This file contains the list of reconstructed recombination events. There is one line for each event, the first column indicates the branch on which the event was found, and the second and third columns indicate the first and last genomic positions affected by the recombination event.

==labelled_tree.newick==
This file contains the starting tree with all nodes labelled so that they can be referred to in other files.

=Graphical output=

To produce a graphical representation of the `ClonalFrameML` output, use the following command:

{{{
Rscript cfml_results.R output_prefix
}}}

The result is a PDF file named `output_prefix.pdf`